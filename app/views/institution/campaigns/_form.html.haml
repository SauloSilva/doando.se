= simple_form_for [:institution, @campaign] do |f|

  .form
    .others
      = f.label :active, t('label.active')
      = f.check_box :active

      = f.label :blood_id, t('label.blood')
      = f.select :blood_id, Blood.scoped.map{ |b| [b.name, b.id] }
      = error_for(@campaign, :blood)

    = f.text_field :title, placeholder: t('label.title')
    = error_for(@campaign, :title)

    = f.text_field :content, placeholder: t('label.content')
    = error_for(@campaign, :content)

    = f.text_field :quantity, placeholder: t('label.quantity')
    = error_for(@campaign, :quantity)

    = f.text_field :expired_at, value: formated_date(@campaign.expired_at), placeholder: t('label.expired_at')
    = error_for(@campaign, :expired_at)

  = link_to t('buttons.back'), [:institution, :campaigns], class: 'back_form'

  .actions
    -unless @campaign.new_record?
      = link_to t('buttons.delete'), [:institution, @campaign], method: :delete, confirm: t('flash.advertise'), class: "link delete"

    = f.button :submit, t('buttons.save'), class: 'button save'

- content_for :javascript do
  :javascript
    new Mask();
    new RemoveFromErrors()